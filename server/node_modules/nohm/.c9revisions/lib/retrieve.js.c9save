{"ts":1341350139358,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Nohm = null;\nexports.setNohm = function (originalNohm) {\n  Nohm = originalNohm;\n};\n\nvar async = require('async'),\n    h = require(__dirname + '/helpers');\n\n/**\n * Check if a given id exists in the DB.\n */\nexports.exists = function (id, callback) {\n  this.getClient().sismember(Nohm.prefix.idsets+this.modelName, id, function (err, found) {\n    Nohm.logError(err);\n    callback(!!found);\n  });\n};\n\nvar convertIdsToInt = function (ids, callback) {\n  if (this.idGenerator === 'increment' && Array.isArray(ids)) {\n    ids = ids.map(function (val) {\n      return parseInt(val, 10);\n    });\n  }\n  callback(ids);\n}\n\n/**\n * Retrieves the hash data by id and puts it into the properties.\n */\nexports.load = function (id, callback) {\n  var self = this;\n  if (!id) {\n    Nohm.logError('Trying to pass load() a wrong kind of id. Needs to be a number over 0. (still trying to load it though)');\n  }\n  this.getClient().hgetall(this.getHashKey(id), function (err, values) {\n    var p, value,\n        keys = values ? Object.keys(values) : [],\n        return_props = {};\n    if (err) {\n      Nohm.logError('loading a hash produced an error: ' + err);\n    }\n    if (Array.isArray(keys) && keys.length > 0) {\n      for (p in values) {\n        if (values.hasOwnProperty(p) && self.properties.hasOwnProperty(p)) {\n          value = values[p] !== null ? values[p].toString() : null;\n          if (self.properties[p].load_pure) {\n            self.properties[p].value = value;\n          } else {\n            self.p(p, value);\n          }\n          return_props[p] = self.p(p);\n          self.__resetProp(p);\n        } else if ( ! self.properties.hasOwnProperty(p)) {\n          Nohm.logError('WARNING: A hash in the DB contained a key that is not in the model definition. This might be because of model changes or database corruption/intrusion.')\n        }\n      }\n      self.id = id;\n      self.__inDB = true;\n      self.__loaded = true;\n    } else if (!err) {\n      err = 'not found';\n    }\n    if (typeof(callback) === 'function') {\n      callback.call(self, err, return_props);\n    }\n  });\n};\n\n\n/**\n * Finds ids of objects by search arguments\n */\nexports.find = function find(searches, callback) {\n  var self = this, sets = [], zsetKeys = [], s, prop,\n  returnFunction = function (err, values) {\n    var found = [];\n    Nohm.logError(err);\n    if (Array.isArray(values) && values.length > 0) {\n      values = values.forEach(function (val) {\n        if (val) {\n          found.push(val);\n        }\n      });\n    } else if ( ! Array.isArray(values) && values !== null) {\n      found = [values];\n    } else if (values === null) {\n      found = [];\n    }\n    convertIdsToInt(found, function (ids) {\n      callback.call(self, err, ids);\n    });\n  },\n  getSets = function (callback) {\n    self.getClient().sinter(sets, callback);\n  },\n  getSingleZSet = function (zSet, callback) {\n    var rangeCallback = function (err, values) {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, values);\n      }\n    };\n    var options = zSet.options;\n    if ( ! options.min && options.min !== 0)\n      options.min = '-inf';\n    if ( ! options.max && options.max !== 0)\n      options.max = '+inf';\n    if ( ! options.offset && options.offset !== 0)\n      options.offset = '+inf';\n    if (options.limit) {\n      self.getClient().zrangebyscore(zSet.key, options.min, options.max,\n                      'LIMIT', options.offset, options.limit,\n                      rangeCallback);\n    } else {\n      self.getClient().zrangebyscore(zSet.key, options.min, options.max,\n                      rangeCallback);\n    }\n  },\n  getZSets = function (callback) {\n    async.map(zsetKeys, getSingleZSet, function done (err, arr) {\n      var ids = h.idIntersection.apply(null, arr);\n      callback(err, ids);\n    });\n  };\n  \n  \n  if (typeof searches === 'function') {\n    callback = searches;\n    searches = {};\n  }\n  for (s in searches) {\n    if (searches.hasOwnProperty(s) && this.properties.hasOwnProperty(s)) {\n      prop = this.properties[s];\n      if (prop.unique) {\n        if (prop.type === 'string') {\n          if ( ! searches[s].toLowerCase) {\n            return returnFunction('Invalid search parameters: Searching for a unique (type \"string\") with a non-string value is not supported.');\n          }\n          searches[s] = searches[s].toLowerCase()\n        }\n        var key = Nohm.prefix.unique+self.modelName+':'+s+':'+searches[s];\n        return this.getClient().get([key], returnFunction);\n      }\n      var isNum = ! isNaN(parseInt(searches[s], 10));\n      if (prop.index && ( ! prop.__numericIndex || isNum) ) {\n        sets.push(Nohm.prefix.index + self.modelName + ':' + s + ':' + searches[s]);\n      } else if (prop.__numericIndex) {\n        zsetKeys.push({\n          key: Nohm.prefix.scoredindex + self.modelName + ':' + s,\n          options: searches[s]\n        });\n      }\n    }\n  }\n  if (sets.length === 0 && zsetKeys.length === 0) {\n    if (JSON.stringify(searches) != '{}') {\n      Nohm.logError(\"Invalid search: Index not found.\");\n      return returnFunction(null, []);\n    }\n    // no specific searches, retrieve all ids\n    this.getClient().smembers(Nohm.prefix.idsets + this.modelName, returnFunction);\n  } else if (zsetKeys.length === 0) {\n    getSets(returnFunction);\n  } else if (sets.length === 0) {\n    getZSets(returnFunction);\n  } else {\n    getSets(function (err, setids) {\n      getZSets(function (err2, zsetids) {\n        if (err2) {\n          err = [err, err2];\n        }\n        returnFunction(err, h.idIntersection(setids, zsetids).sort());\n      });\n    });\n  }\n};\n\nexports.sort = function (options, ids) {\n  var callback = h.getCallback(arguments);\n  if ( ! Array.isArray(ids) || ids.length === 0) {\n    ids = false;\n  }\n  options = typeof(options) !== 'function' && typeof(options) === 'object' && Object.keys(options).length > 0 ? options : {};\n  \n  if (ids.length > 0 && options === {}) {\n    return callback(ids.sort());\n  }\n  \n  if ( ! options.field || ! this.properties.hasOwnProperty(options.field)) {\n    callback('invalid field in options', ids);\n    return Nohm.logError('Invalid field in sort() options: ' + options.field);\n  }\n  \n  var field_type = this.properties[options.field].type;\n  \n  var alpha = options.alpha ||  field_type === 'string' ? 'ALPHA' : '';\n  var direction = options.direction ? options.direction : 'ASC';\n  var scored = Nohm.indexNumberTypes.indexOf(field_type) !== -1;\n  var start = 0;\n  var stop = 100;\n  if (Array.isArray(options.limit) && options.limit.length > 0) {\n    start = options.limit[0];\n    if (scored) { // the limit arguments for sets and sorted sets work differently\n      // stop is a 0-based index from the start of all zset members\n      stop = options.limit[1] ? start+options.limit[1] : start+stop;\n      stop--;\n    } else {\n      // stop is a 1-based index from the defined start limit (the wanted behaviour)\n      stop = options.limit[1] || stop;\n    }\n  }\n  var idset_key = Nohm.prefix.idsets+this.modelName;\n  var zset_key = Nohm.prefix.scoredindex+this.modelName+':'+options.field;\n  var client = this.getClient();\n  var tmp_key;\n  \n  if (ids) {\n    // to get the intersection of the given ids and all ids on the server we first\n    // temporarily store the given ids either in a set or sorted set and then return the intersection\n    \n    client = client.multi(); \n    \n    if (scored) {\n      tmp_key = zset_key+':tmp_sort:'+(+ new Date()) + Math.ceil(Math.random()*1000);\n      var tmp_zadd_args = [tmp_key];\n      ids.forEach(function (id) {\n        tmp_zadd_args.push(0, id);\n      });\n      client.zadd(tmp_zadd_args);\n      client.zinterstore([tmp_key, 2, tmp_key, zset_key]);\n      zset_key = tmp_key;\n    } else {\n      tmp_key = idset_key+':tmp_sort:'+(+ new Date()) + Math.ceil(Math.random()*1000);\n      ids.unshift(tmp_key);\n      client.SADD(ids);\n      client.SINTERSTORE([tmp_key, tmp_key, idset_key]);\n      idset_key = tmp_key;\n    }\n  }\n  if (scored) {\n    sortScored.call(this, client, zset_key, direction, start, stop, callback);\n  } else {\n    sortNormal.call(this, client, idset_key, options.field, alpha, direction, start, stop, callback);\n  }\n  if (ids) {\n    client.del(tmp_key);\n    client.exec(Nohm.logError);    \n  }\n};\n\nvar sortNormal = function (client, idset_key, field, alpha, direction, start, stop, callback) {\n  var hash_key = Nohm.prefix.hash+this.modelName;\n  client.sort([idset_key, \n    'BY', hash_key+':*->'+field, \n    'LIMIT', start, stop,\n    direction,\n    alpha],\n    callback);\n};\n\n\nvar sortScored = function (client, zset_key, direction, start, stop, callback) {\n  var method = direction && direction === 'DESC' ? 'ZREVRANGE' : 'ZRANGE';\n  if (start < 0 || stop < 0) {\n    Nohm.logError('Notice: tried to limit a scored sort with a negative start('+start+') or stop('+stop+').');\n  }\n  if (stop < start) {\n    Nohm.logError('Notice: tried to limit a scored sort with a higher start('+start+') than stop('+stop+').');\n  }\n  client[method](\n    [zset_key,\n      start, stop],\n    callback\n  );\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":9024}]],"length":9024}
{"contributors":[],"silentsave":false,"ts":1341350161234,"patch":[[{"diffs":[[0,"ed a key"],[1," ('+p+')"],[0," that is"]],"start1":1705,"start2":1705,"length1":16,"length2":24}]],"length":9032,"saved":false}
{"ts":1341350352607,"patch":[[{"diffs":[[0,"        "],[-1,"if ("],[1,"var is_enumerable = "],[0,"values.h"]],"start1":1220,"start2":1220,"length1":20,"length2":36},{"diffs":[[0,"y(p)"],[-1," && self.properties.hasOwnProperty(p)"],[1,";\n        var is_property = p !== '__meta_version' && self.properties.hasOwnProperty(p)\n        if (is_enumerable && is_property"],[0,") {\n"]],"start1":1268,"start2":1268,"length1":45,"length2":136}]],"length":9139,"saved":false}
{"ts":1341350355322,"patch":[[{"diffs":[[0,"perty(p)"],[1,";"],[0,"\n       "]],"start1":1351,"start2":1351,"length1":16,"length2":17}]],"length":9140,"saved":false}
{"ts":1341350399196,"patch":[[{"diffs":[[0," var is_"],[-1,"property"],[1,"meta"],[0," = p !=="]],"start1":1281,"start2":1281,"length1":24,"length2":20},{"diffs":[[0,"version'"],[-1," &&"],[1,";\n        var is_property ="],[0," self.pr"]],"start1":1310,"start2":1310,"length1":19,"length2":43},{"diffs":[[0,"property"],[1," && is_meta"],[0,") {\n    "]],"start1":1413,"start2":1413,"length1":16,"length2":27},{"diffs":[[0,"e if ( !"],[1," is_meta && !"],[0," self.pr"]],"start1":1740,"start2":1740,"length1":16,"length2":29}]],"length":9184,"saved":false}
{"ts":1341350418106,"patch":[[{"diffs":[[0,"eta = p "],[-1,"!"],[1,"="],[0,"== '__me"]],"start1":1290,"start2":1290,"length1":17,"length2":17}]],"length":9184,"saved":false}
{"ts":1341350421693,"patch":[[{"diffs":[[0,"perty &&"],[1," !"],[0," is_meta"]],"start1":1416,"start2":1416,"length1":16,"length2":18}]],"length":9186,"saved":false}
{"contributors":[],"silentsave":false,"ts":1342362601030,"patch":[[{"diffs":[[0,"value);\n"],[1,"            \n            if (self.p(p) !== value) {\n              console.log('loaded', p, ' and it was different after typecasting: ', value, self.p(p));\n            }\n"],[0,"        "]],"start1":1639,"start2":1639,"length1":16,"length2":185}]],"length":9355,"saved":false}
{"ts":1342362809665,"patch":[[{"diffs":[[0,".p(p) !="],[-1,"="],[0," value) "]],"start1":1680,"start2":1680,"length1":17,"length2":16}]],"length":9354,"saved":false}
{"ts":1342362918854,"patch":[[{"diffs":[[0,"e);\n"],[-1,"            \n            if (self.p(p) != value) {\n              console.log('loaded', p, ' and it was different after typecasting: ', value, self.p(p));\n            }\n"],[0,"    "]],"start1":1643,"start2":1643,"length1":176,"length2":8}]],"length":9186,"saved":false}
{"contributors":[],"silentsave":true,"ts":1342892970957,"patch":[[{"diffs":[[0,"    "],[-1,"var is_enumerable = "],[1,"if ("],[0,"valu"]],"start1":1224,"start2":1224,"length1":28,"length2":12},{"diffs":[[0,"y(p)"],[-1,";\n        var is_meta = p === '__meta_version';\n        var is_property = self.properties.hasOwnProperty(p);\n        if (is_enumerable && is_property && ! is_meta"],[1," && self.properties.hasOwnProperty(p)"],[0,") {\n"]],"start1":1252,"start2":1252,"length1":170,"length2":45},{"diffs":[[0," ( !"],[-1," is_meta && !"],[0," sel"]],"start1":1605,"start2":1605,"length1":21,"length2":8},{"diffs":[[0," key"],[-1," ('+p+')"],[0," tha"]],"start1":1709,"start2":1709,"length1":16,"length2":8}]],"length":9024,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354638328631,"patch":[[{"diffs":[[0,"        "],[-1,"if ("],[1,"var is_enumerable = "],[0,"values.h"]],"start1":1220,"start2":1220,"length1":20,"length2":36},{"diffs":[[0,"y(p)"],[-1," && self.properties.hasOwnProperty(p)"],[1,";\n        var is_meta = p === '__meta_version';\n        var is_property = self.properties.hasOwnProperty(p);\n        if (is_enumerable && is_property && ! is_meta"],[0,") {\n"]],"start1":1268,"start2":1268,"length1":45,"length2":170},{"diffs":[[0,"e if ( !"],[1," is_meta && !"],[0," self.pr"]],"start1":1742,"start2":1742,"length1":16,"length2":29},{"diffs":[[0,"ed a key"],[1," ('+p+')"],[0," that is"]],"start1":1859,"start2":1859,"length1":16,"length2":24},{"diffs":[[0,"});\n};\n\n"],[1,"/**\n * Finds ids of objects and loads them.\n */\nexports.findAndLoad = function findAndLoad(searches, callback) {\n  var self = this;\n  this.find(searches, function (err, ids) {\n    if (err) {\n      callback(err, ids);\n    } else if (ids.length == 0) {\n      callback(\"not found\", ids);\n    } else {\n      if (ids.length > 0) {\n        async.map(ids, function (id, done) {\n          self.load(id, function (err, props) {\n            done(err, self);\n          });\n        }, callback);\n      }\n    }\n  });\n};\n"],[0,"\n/**\n * "]],"start1":2231,"start2":2231,"length1":16,"length2":523}]],"length":9693,"saved":false}
{"ts":1354638345904,"patch":[[{"diffs":[[0,"ength =="],[1,"="],[0," 0) {\n  "]],"start1":2476,"start2":2476,"length1":16,"length2":17},{"diffs":[[0,"(err"],[-1,", props"],[0,") {\n"]],"start1":2644,"start2":2644,"length1":15,"length2":8}]],"length":9687,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354638404202,"patch":[[{"diffs":[[0,"ound\", ids);"],[1,"a"],[0,"\n    } else "]],"start1":2512,"start2":2512,"length1":24,"length2":25},{"diffs":[[0,"unction (err"],[1,", props"],[0,") {\n        "]],"start1":2637,"start2":2637,"length1":24,"length2":31}]],"length":9695,"saved":false}
{"ts":1354638405439,"patch":[[{"diffs":[[0,"\", ids);"],[-1,"a"],[0,"\n    } e"]],"start1":2516,"start2":2516,"length1":17,"length2":16}]],"length":9694,"saved":false}
{"ts":1354638408689,"patch":[[{"diffs":[[0,"(err"],[-1,", props"],[0,") {\n"]],"start1":2644,"start2":2644,"length1":15,"length2":8}]],"length":9687,"saved":false}
{"ts":1354640013275,"patch":[[{"diffs":[[0,"{\n          "],[1,"var "],[0,"self.load(id"]],"start1":2609,"start2":2609,"length1":24,"length2":28}]],"length":9691,"saved":false}
{"ts":1354640016074,"patch":[[{"diffs":[[0,"        var "],[1,"result = nohm"],[0,"self.load(id"]],"start1":2613,"start2":2613,"length1":24,"length2":37}]],"length":9704,"saved":false}
{"ts":1354640018457,"patch":[[{"diffs":[[0,"t = nohm"],[1,".fa"],[0,"self.loa"]],"start1":2630,"start2":2630,"length1":16,"length2":19}]],"length":9707,"saved":false}
{"ts":1354640019852,"patch":[[{"diffs":[[0," nohm.fa"],[1,"ctory"],[0,"self.loa"]],"start1":2633,"start2":2633,"length1":16,"length2":21}]],"length":9712,"saved":false}
{"ts":1354640023055,"patch":[[{"diffs":[[0,"var "],[-1,"result"],[1,"instance"],[0," = n"]],"start1":2621,"start2":2621,"length1":14,"length2":16}]],"length":9714,"saved":false}
{"ts":1354640026228,"patch":[[{"diffs":[[0,".factory"],[1,"("],[0,"self.loa"]],"start1":2640,"start2":2640,"length1":16,"length2":17}]],"length":9715,"saved":false}
{"ts":1354640027545,"patch":[[{"diffs":[[0,"ry(self."],[1,"self."],[0,"load(id,"]],"start1":2646,"start2":2646,"length1":16,"length2":21}]],"length":9720,"saved":false}
{"ts":1354640031323,"patch":[[{"diffs":[[0,"ry(self."],[1,"modelName)"],[0,"self.loa"]],"start1":2646,"start2":2646,"length1":16,"length2":26}]],"length":9730,"saved":false}
{"ts":1354640032733,"patch":[[{"diffs":[[0,"delName)"],[1,";\n          "],[0,"self.loa"]],"start1":2656,"start2":2656,"length1":16,"length2":28}]],"length":9742,"saved":false}
{"ts":1354640036564,"patch":[[{"diffs":[[0,"        "],[-1,"self"],[1,"instance"],[0,".load(id"]],"start1":2668,"start2":2668,"length1":20,"length2":24}]],"length":9746,"saved":false}
{"ts":1354640041695,"patch":[[{"diffs":[[0,"ne(err, "],[-1,"self"],[1,"instance"],[0,");\n     "]],"start1":2725,"start2":2725,"length1":20,"length2":24}]],"length":9750,"saved":false}
{"contributors":[],"silentsave":true,"ts":1357222493702,"patch":[[{"diffs":[[0,"tance = "],[-1,"n"],[1,"N"],[0,"ohm.fact"]],"start1":2628,"start2":2628,"length1":17,"length2":17},{"diffs":[[0,"ay(ids) "],[-1,"||"],[1,") {\n    ids = false;\n  }\n  if ( ids &&"],[0," ids.len"]],"start1":6415,"start2":6415,"length1":18,"length2":54},{"diffs":[[0,"h =="],[-1,"="],[0," 0"],[-1,")"],[0," "],[1,")"],[0,"{\n    "],[-1,"ids = false"],[1,"callback(null, []);\n    return"],[0,";\n  "]],"start1":6471,"start2":6471,"length1":30,"length2":48}]],"length":9804,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357223285706,"patch":[[{"diffs":[[0,"Callback"],[-1,""],[0,""],[1,", options, is_rev, command, endpoints;\n    \n    rangeCallback"],[0," = funct"]],"start1":3597,"start2":3597,"length1":16,"length2":77},{"diffs":[[0," };\n    "],[-1,"var "],[0,""],[1,""],[0,"options "]],"start1":3792,"start2":3792,"length1":20,"length2":16},{"diffs":[[0,"'+inf';\n"],[1,"      \n"],[0,"    if"],[1,"("],[0," (option"]],"start1":4044,"start2":4044,"length1":22,"length2":30},{"diffs":[[0,"ons."],[-1,"limit) {\n      self.getClient().zrangebyscore(zSet.key, options.min,"],[1,"min == '+inf' && options.max != '+inf') || \n        (options.max == '-inf' && options.min != '-inf') || \n        (options.min > options.max) ) {\n      command = 'zrevrangebyscore';\n    } else {\n      command = 'zrangebyscore';\n    }\n    \n    if ( ! options.endpoint ) {\n      options.endpoint = '[]';\n    } else {\n      if ( options.endpoint.length == 1 ) {\n        if ( options.endpoint[0] == ')' || options.endpoint[1] == ']' ) {\n          options.endpoint = '[' + options.endpoint;\n        } else if ( options.endpoint[0] == '(' || options.endpoint[1] == '[' ) {\n          options.endpoint += ']';\n        } else {\n          return returnFunction('Invalid search parameters: endpoint expression is invalid.');\n        }\n      } else if ( options.endpoint.length != 2) {\n        return returnFunction('Invalid search parameters: endpoint expression is invalid.');\n      }\n    }\n    endpoints = [(options.endpoint[0] == '('), (options.endpoint[1] == ')')]\n    \n    if (options.limit) {\n      self.getClient()[command](zSet.key, \n                    (endpoints[0] ? '(' : '') + options.min, \n                    (endpoints[1] ? '(': '') +"],[0," opt"]],"start1":4072,"start2":4072,"length1":76,"length2":1146},{"diffs":[[0," + options.max,\n"],[-1,"  "],[0,"                "]],"start1":5212,"start2":5212,"length1":34,"length2":32},{"diffs":[[0,"                "],[-1,"  "],[0,"rangeCallback);\n"]],"start1":5292,"start2":5292,"length1":34,"length2":32},{"diffs":[[0,"nt()"],[-1,".zrangebyscore(zSet.key, options.min,"],[1,"[command](zSet.key, \n                    (endpoints[0] ? '(' : '') + options.min, \n                    (endpoints[1] ? '(': '') +"],[0," opt"]],"start1":5355,"start2":5355,"length1":45,"length2":137},{"diffs":[[0," + options.max,\n"],[-1,"  "],[0,"                "]],"start1":5486,"start2":5486,"length1":34,"length2":32}]],"length":11025,"saved":false}
{"ts":1357223337007,"patch":[[{"diffs":[[0,"] == '('"],[1," ? '(' ; ''"],[0,"), (opti"]],"start1":4992,"start2":4992,"length1":16,"length2":27},{"diffs":[[0,"] == ')'"],[1," ? '(' ; ''"],[0,")]\n    \n"]],"start1":5033,"start2":5033,"length1":16,"length2":27},{"diffs":[[0,"                "],[-1,"("],[0,"endpoints[0] ? '"]],"start1":5132,"start2":5132,"length1":33,"length2":32},{"diffs":[[0,"endpoints[0]"],[-1," ? '(' : '')"],[0," + options.m"]],"start1":5148,"start2":5148,"length1":36,"length2":24},{"diffs":[[0,"                "],[-1,"("],[0,"endpoints[1] ? '"]],"start1":5181,"start2":5181,"length1":33,"length2":32},{"diffs":[[0,"endpoints[1]"],[-1," ? '(': '')"],[0," + options.m"]],"start1":5197,"start2":5197,"length1":35,"length2":24},{"diffs":[[0,"                "],[-1,"("],[0,"endpoints[0] ? '"]],"start1":5381,"start2":5381,"length1":33,"length2":32},{"diffs":[[0,"s[0]"],[-1," ? '(' : '')"],[0," + o"]],"start1":5405,"start2":5405,"length1":20,"length2":8},{"diffs":[[0,"        "],[-1,"("],[0,"endpoint"]],"start1":5438,"start2":5438,"length1":17,"length2":16},{"diffs":[[0,"s[1]"],[-1," ? '(': '')"],[0," + o"]],"start1":5454,"start2":5454,"length1":19,"length2":8}]],"length":10997,"saved":false}
{"ts":1357223432421,"patch":[[{"diffs":[[0,"ints = ["],[1,"\n      "],[0,"(options"]],"start1":4965,"start2":4965,"length1":16,"length2":23},{"diffs":[[0,"dpoint[0] =="],[1,"="],[0," '(' ? '(' ;"]],"start1":4991,"start2":4991,"length1":24,"length2":25},{"diffs":[[0,"'(' "],[-1,";"],[1,":"],[0," ''), "],[1,"\n      "],[0,"(opt"]],"start1":5011,"start2":5011,"length1":15,"length2":22},{"diffs":[[0,"dpoint[1] =="],[1,"="],[0," ')' ? '(' ;"]],"start1":5040,"start2":5040,"length1":24,"length2":25},{"diffs":[[0,"'(' "],[-1,";"],[1,":"],[0," '')"],[-1,"]"],[1,"\n    ];"],[0,"\n   "]],"start1":5060,"start2":5060,"length1":14,"length2":20}]],"length":11019,"saved":false}
{"ts":1357223756484,"patch":[[{"diffs":[[0,"ns.limit) {\n"],[1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max,\n                    'LIMIT', options.offset, options.limit)\n"],[0,"      self.g"]],"start1":5095,"start2":5095,"length1":24,"length2":219}]],"length":11214,"saved":false}
{"ts":1357224434208,"patch":[[{"diffs":[[0,"s.min !== 0)"],[-1,""],[0,""],[1," {"],[0,"\n      optio"]],"start1":3856,"start2":3856,"length1":24,"length2":26},{"diffs":[[0,"n = '-inf';\n"],[1,"    }\n"],[0,"    if ( ! o"]],"start1":3887,"start2":3887,"length1":24,"length2":30},{"diffs":[[0,"s.max !== 0)"],[1," {"],[0,"\n      optio"]],"start1":3937,"start2":3937,"length1":24,"length2":26},{"diffs":[[0,"x = '+inf';\n"],[1,"    }\n"],[0,"    if ( ! o"]],"start1":3968,"start2":3968,"length1":24,"length2":30},{"diffs":[[0,"t !== 0)"],[1," {"],[0,"\n      o"]],"start1":4028,"start2":4028,"length1":16,"length2":18},{"diffs":[[0,"ffset = "],[-1,"'+inf';"],[1,"0;\n    }"],[0,"\n      \n"]],"start1":4054,"start2":4054,"length1":23,"length2":24}]],"length":11233,"saved":false}
{"ts":1357224569466,"patch":[[{"diffs":[[0,"   } else {\n"],[1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max)\n"],[0,"      self.g"]],"start1":5558,"start2":5558,"length1":24,"length2":159}]],"length":11368,"saved":false}
{"ts":1357224989210,"patch":[[{"diffs":[[0,"e {\n"],[-1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max)\n"],[0,"    "]],"start1":5566,"start2":5566,"length1":143,"length2":8}]],"length":11233,"saved":false}
{"ts":1357225098880,"patch":[[{"diffs":[[0,"   } else {\n"],[1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max)\n"],[0,"      self.g"]],"start1":5558,"start2":5558,"length1":24,"length2":159}]],"length":11368,"saved":false}
{"ts":1357225134154,"patch":[[{"diffs":[[0,"    "],[-1,"\n    if (options.limit) {\n      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max,\n                    'LIMIT', options.offset, "],[1,"console.log(endpoints);\n    \n    if ("],[0,"opti"]],"start1":5096,"start2":5096,"length1":214,"length2":45},{"diffs":[[0,"s.limit)"],[1," {"],[0,"\n      s"]],"start1":5143,"start2":5143,"length1":16,"length2":18},{"diffs":[[0,"se {"],[-1,"\n      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max)"],[0,""],[1,""],[0,"\n   "]],"start1":5398,"start2":5398,"length1":143,"length2":8}]],"length":11066,"saved":false}
{"ts":1357225248195,"patch":[[{"diffs":[[0,"ons,"],[-1," is_rev,"],[0," com"]],"start1":3611,"start2":3611,"length1":16,"length2":8},{"diffs":[[0,"ndpoints"],[1,", limit_args"],[0,";\n    \n "]],"start1":3626,"start2":3626,"length1":16,"length2":28},{"diffs":[[0,"  }\n"],[-1,"    if ( ! options.offset && options.offset !== 0) {\n      options.offset = 0;\n    }\n"],[0,"    "]],"start1":3986,"start2":3986,"length1":93,"length2":8},{"diffs":[[0,"    "],[-1,"self.getClient()[command](zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max,\n      "],[1,"if ( ! options.offset && options.offset !== 0) {\n        options.offset = 0;\n"],[0,"      "],[1,"}\n"],[0,"      "],[-1,"  "],[1,"limit_args = ["],[0,"'LIM"]],"start1":5075,"start2":5075,"length1":162,"length2":113},{"diffs":[[0,"imit"],[-1,",\n                    rangeCallback);\n    } else {"],[1,"]\n    } else {\n      limit_args = [null, null, null];\n    }\n    "],[0,"\n   "]],"start1":5218,"start2":5218,"length1":58,"length2":72},{"diffs":[[0,"ns.max,\n"],[1,"                    limit_args[0], limit_args[1], limit_args[2]\n"],[0,"        "]],"start1":5419,"start2":5419,"length1":16,"length2":80},{"diffs":[[0,"lback);\n"],[-1,"    }\n"],[0,"  },\n  g"]],"start1":5519,"start2":5519,"length1":22,"length2":16}]],"length":11008,"saved":false}
{"ts":1357225259223,"patch":[[{"diffs":[[0," }\n    \n    "],[-1,"  "],[0,"self.getClie"]],"start1":5279,"start2":5279,"length1":26,"length2":24},{"diffs":[[0,"                "],[-1,"  "],[0,"endpoints[0] + o"]],"start1":5330,"start2":5330,"length1":34,"length2":32},{"diffs":[[0,"s.min, \n"],[-1,"  "],[0,"        "]],"start1":5367,"start2":5367,"length1":18,"length2":16},{"diffs":[[0,"            "],[-1,"  "],[0,"limit_args[0"]],"start1":5427,"start2":5427,"length1":26,"length2":24},{"diffs":[[0,"_args[2]"],[1,","],[0,"\n"],[-1,"  "],[0,"        "]],"start1":5474,"start2":5474,"length1":19,"length2":18}]],"length":10999,"saved":false}
{"ts":1357225330790,"patch":[[{"diffs":[[0,"\n    }\n    \n"],[1,"    console.log(command, zSet.key, \n                  endpoints[0] + options.min, \n                  endpoints[1] + options.max,\n                  limit_args[0], limit_args[1], limit_args[2],\n                  rangeCallback)\n    \n"],[0,"    self.get"]],"start1":5275,"start2":5275,"length1":24,"length2":254}]],"length":11229,"saved":false}
{"ts":1357225360382,"patch":[[{"diffs":[[0," = ["],[-1,"null, null, null"],[1,"undefined, undefined, undefined"],[0,"];\n "]],"start1":5253,"start2":5253,"length1":24,"length2":39}]],"length":11244,"saved":false}
{"ts":1357225393006,"patch":[[{"diffs":[[0," = ["],[-1,"undefined, undefined, undefined"],[1,"'', '', ''"],[0,"];\n "]],"start1":5253,"start2":5253,"length1":39,"length2":18}]],"length":11223,"saved":false}
{"ts":1357225429515,"patch":[[{"diffs":[[0,", values) {\n"],[1,"      console.log(zSet, values);\n"],[0,"      if (er"]],"start1":3686,"start2":3686,"length1":24,"length2":57}]],"length":11256,"saved":false}
{"ts":1357225518383,"patch":[[{"diffs":[[0,"options,"],[1," is_rev,"],[0," command"]],"start1":3607,"start2":3607,"length1":16,"length2":24},{"diffs":[[0,"ndpoints"],[-1,", limit_args"],[0,";\n    \n "]],"start1":3634,"start2":3634,"length1":28,"length2":16},{"diffs":[[0,") {\n"],[-1,"      console.log(zSet, values);\n"],[0,"    "]],"start1":3690,"start2":3690,"length1":41,"length2":8},{"diffs":[[0,"inf';\n    }\n"],[1,"    if ( ! options.offset && options.offset !== 0) {\n      options.offset = 0;\n    }\n"],[0,"      \n    i"]],"start1":3974,"start2":3974,"length1":24,"length2":109},{"diffs":[[0,"    "],[-1,"if ( ! options.offset && options.offset !== 0) {\n        options.offset = 0;\n      }\n      limit_args = ['LIMIT', options.offset, options.limit]\n    } else {\n      limit_args = ['', '', ''];\n    }\n    \n    console.log("],[1,"self.getClient()["],[0,"command"],[-1,", "],[1,"]("],[0,"zSet"]],"start1":5156,"start2":5156,"length1":235,"length2":34},{"diffs":[[0,"and](zSet.key, \n"],[1,"  "],[0,"                "]],"start1":5181,"start2":5181,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"  "],[0,"endpoints[1] + o"]],"start1":5248,"start2":5248,"length1":32,"length2":34},{"diffs":[[0,"    "],[-1,"limit_args[0], limit_args[1], limit_args[2],\n"],[1,"  'LIMIT', options.offset, options.limit,\n  "],[0,"    "]],"start1":5308,"start2":5308,"length1":53,"length2":52},{"diffs":[[0,"allback)"],[1,";"],[0,"\n    "],[-1,"\n"],[1,"} else {\n  "],[0,"    self"]],"start1":5380,"start2":5380,"length1":22,"length2":33},{"diffs":[[0,"                "],[1,"  "],[0,"endpoints[0] + o"]],"start1":5448,"start2":5448,"length1":32,"length2":34},{"diffs":[[0,"                "],[1," "],[1," "],[0,"endpoints[1] + o"]],"start1":5497,"start2":5497,"length1":32,"length2":34},{"diffs":[[0,",\n  "],[-1,"                limit_args[0], limit_args[1], limit_args[2],\n"],[0,"    "]],"start1":5541,"start2":5541,"length1":69,"length2":8},{"diffs":[[0,"rangeCallback);\n"],[1,"    }\n"],[0,"  },\n  getZSets "]],"start1":5563,"start2":5563,"length1":32,"length2":38}]],"length":11066,"saved":false}
{"ts":1357225522461,"patch":[[{"diffs":[[0,"ons,"],[-1," is_rev,"],[0," com"]],"start1":3611,"start2":3611,"length1":16,"length2":8}]],"length":11058,"saved":false}
{"ts":1357225607804,"patch":[[{"diffs":[[0,"endpoint"],[1,"s"],[0," ) {\n   "]],"start1":4344,"start2":4344,"length1":16,"length2":17},{"diffs":[[0,"ons.endpoint"],[1,"s"],[0," = '[]';\n   "]],"start1":4368,"start2":4368,"length1":24,"length2":25},{"diffs":[[0,"options.endpoint"],[1,"s"],[0,".length == 1 ) {"]],"start1":4414,"start2":4414,"length1":32,"length2":33},{"diffs":[[0,"options.endpoint"],[1,"s"],[0,"[0] == ')' || op"]],"start1":4461,"start2":4461,"length1":32,"length2":33},{"diffs":[[0,"options.endpoint"],[1,"s"],[0,"[1] == ']' ) {\n "]],"start1":4492,"start2":4492,"length1":32,"length2":33},{"diffs":[[0,"endpoint"],[1,"s"],[0," = '[' +"]],"start1":4542,"start2":4542,"length1":16,"length2":17},{"diffs":[[0,"endpoint"],[1,"s"],[0,";\n      "]],"start1":4568,"start2":4568,"length1":16,"length2":17},{"diffs":[[0,"ons.endpoint"],[1,"s"],[0,"[0] == '(' |"]],"start1":4603,"start2":4603,"length1":24,"length2":25},{"diffs":[[0,"ons.endpoint"],[1,"s"],[0,"[1] == '[' )"]],"start1":4634,"start2":4634,"length1":24,"length2":25},{"diffs":[[0,"endpoint"],[1,"s"],[0," += ']';"]],"start1":4680,"start2":4680,"length1":16,"length2":17},{"diffs":[[0,"meters: endpoint"],[1,"s"],[0," expression is i"]],"start1":4767,"start2":4767,"length1":32,"length2":33},{"diffs":[[0,"endpoint"],[1,"s"],[0,".length "]],"start1":4847,"start2":4847,"length1":16,"length2":17},{"diffs":[[0,"endpoint"],[1,"s"],[0," express"]],"start1":4930,"start2":4930,"length1":16,"length2":17},{"diffs":[[0,"endpoint"],[1,"s"],[0,"[0] === "]],"start1":5013,"start2":5013,"length1":16,"length2":17},{"diffs":[[0,"endpoint"],[1,"s"],[0,"[1] === "]],"start1":5063,"start2":5063,"length1":16,"length2":17}]],"length":11073,"saved":false}
{"ts":1357226220856,"patch":[[{"diffs":[[0,"   } else {\n"],[1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max)\n"],[0,"      self.g"]],"start1":5398,"start2":5398,"length1":24,"length2":159}]],"length":11208,"saved":false}
{"ts":1357226406399,"patch":[[{"diffs":[[0," ];\n"],[-1,"    console.log(endpoints);\n"],[0,"    "]],"start1":5099,"start2":5099,"length1":36,"length2":8},{"diffs":[[0,"e {\n"],[-1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max)\n"],[0,"    "]],"start1":5378,"start2":5378,"length1":143,"length2":8}]],"length":11045,"saved":false}
{"ts":1357227272616,"patch":[[{"diffs":[[0,"= '+inf';\n    }\n"],[1,"    if ( ! options.limit && options.limit !== 0) {\n      options.offset = 0;\n    }\n"],[0,"    if ( ! optio"]],"start1":3962,"start2":3962,"length1":32,"length2":115}]],"length":11128,"saved":false}
{"ts":1357227295018,"patch":[[{"diffs":[[0,"ns.limit"],[1," || options.offset"],[0,") {\n    "]],"start1":5204,"start2":5204,"length1":16,"length2":34}]],"length":11146,"saved":false}
{"ts":1357227327467,"patch":[[{"diffs":[[0,"{\n      options."],[-1,"offse"],[1,"limi"],[0,"t = 0;\n    }\n   "]],"start1":4027,"start2":4027,"length1":37,"length2":36}]],"length":11145,"saved":false}
{"ts":1357227356657,"patch":[[{"diffs":[[0,"ons.limit = "],[-1,"0"],[1,"'+inf'"],[0,";\n    }\n    "]],"start1":4039,"start2":4039,"length1":25,"length2":30}]],"length":11150,"saved":false}
{"ts":1357227419880,"patch":[[{"diffs":[[0,"options."],[-1,"limi"],[1,"offse"],[0,"t && opt"]],"start1":3989,"start2":3989,"length1":20,"length2":21},{"diffs":[[0,"options."],[-1,"limi"],[1,"offse"],[0,"t !== 0)"]],"start1":4007,"start2":4007,"length1":20,"length2":21},{"diffs":[[0,"ons."],[-1,"limit = '+inf'"],[1,"offset = 0"],[0,";\n  "]],"start1":4041,"start2":4041,"length1":22,"length2":18},{"diffs":[[0,";\n    }\n    if ("],[-1," ! "],[0,"options.offset &"]],"start1":4055,"start2":4055,"length1":35,"length2":32},{"diffs":[[0,"s.offset && "],[1,"!"],[0,"options."],[-1,"offse"],[1,"limit && options.limi"],[0,"t !== 0) {\n "]],"start1":4077,"start2":4077,"length1":37,"length2":54},{"diffs":[[0,"    options."],[-1,"offset = 0"],[1,"limit = '+inf'"],[0,";\n    }\n    "]],"start1":4132,"start2":4132,"length1":34,"length2":38}]],"length":11166,"saved":false}
{"ts":1357227445746,"patch":[[{"diffs":[[0,"limit = '+inf';\n"],[1,"      console.log('limiting to no end because of offset')\n"],[0,"    }\n      \n   "]],"start1":4144,"start2":4144,"length1":32,"length2":90}]],"length":11224,"saved":false}
{"ts":1357227468615,"patch":[[{"diffs":[[0,"imit"],[-1," || options.offset) {"],[1,") {\n      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max,\n                    'LIMIT', options.offset, options.limit,\n                    rangeCallback)"],[0,"\n   "]],"start1":5286,"start2":5286,"length1":29,"length2":241}]],"length":11436,"saved":false}
{"ts":1357227820922,"patch":[[{"diffs":[[0,"limit = "],[-1,"'+inf'"],[1,"-1"],[0,";\n      "]],"start1":4144,"start2":4144,"length1":22,"length2":18}]],"length":11432,"saved":false}
{"ts":1357227912451,"patch":[[{"diffs":[[0,"-1;\n"],[-1,"      console.log('limiting to no end because of offset')\n"],[0,"    "]],"start1":4152,"start2":4152,"length1":66,"length2":8},{"diffs":[[0,") {\n"],[-1,"      console.log(command, zSet.key, \n                    endpoints[0] + options.min, \n                    endpoints[1] + options.max,\n                    'LIMIT', options.offset, options.limit,\n                    rangeCallback)\n"],[0,"    "]],"start1":5228,"start2":5228,"length1":238,"length2":8}]],"length":11144,"saved":false}
